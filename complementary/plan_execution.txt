# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    plan_execution.txt                                 :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: spagliar <marvin@42.fr>                    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/09/06 10:17:56 by spagliar          #+#    #+#              #
#    Updated: 2024/09/06 10:17:58 by spagliar         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

1/Creation des structures :

t_cmd ->represente chaque commande :
- parametres
- redirections ->infile, outfile
- pointeurs ->prev et next (relier les commandes dans la liste chainee)

t_data ->structure principale :
- pipes
- commandes
- autres

2/Gerer les commandes integrer = built-ins 
- echo avec l'option -n
- cd avec seulement un chemin relatif ou absolu
- pwd
- export sans options
- unset sans options
- env sans options ni arguments
- exit sans options
objectif -> coder l'execution des commades : utiliser bool pour verif et excuter

3/execution des commades externes :
- creation du processus enfants -> fork
- execution avec execve
- gestion des redirections et des pipes
- parent -> fermeture des descripteurs de fichiers + lien de commade -> pipe 
Objectif -> coder l execution des commades

4/gestions des pipes et redirections :
- les pipes : redirige la sortie standard d'une commade vers l entree standard de la suivante
- les redirections : redirige les entrees /sorties vers des fichiers
 < : devrait rediriger l'entree.
 > : devrait rediriger la sortie.

5/gestion des here-documents (heredoc)
<< : cf sujet -> heredoc 
>> : doit rediriger la sortie en mode ajout.
objectif : coder ses commandes qui permet de lire plusieurs lignes d entree juqu au delimiteur
Attention : entree doit etre lue et utilisee comme entree standard pour la commade suivante

6/gestion des signaux : 
ctrl-C -> signal d'interruption : sigint
ctrl-D -> signal de fin de fichier : EOF
ctrl-\ -> ne fait rien
ctrl-* -> envoie un signal de "quit" : sigquit
objectif : eviter que le shell se ferme de maniere imprevue
coder avec sigmal et sigaction

7/Attente fin de processus enfants
waitpid -> utiliser a cet effet apres execution des commandes

8/gestion des erreurs et nettoyage :
- fuites memoires = liberer de la memoire
- fermer les descripteurs de fichiers
Objectif : coder les erreurs de fonction et free pour la memoire  





